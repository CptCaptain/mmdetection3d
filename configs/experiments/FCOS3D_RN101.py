data = {'val': {'type': 'NuScenesMonoDataset', 'classes': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'], 'ann_file': 'data/nuscenes/nuscenes_infos_val_mono3d.coco.json', 'modality': {'use_map': False, 'use_lidar': False, 'use_radar': False, 'use_camera': True, 'use_external': False}, 'pipeline': [{'type': 'LoadImageFromFileMono3D'}, {'flip': False, 'type': 'MultiScaleFlipAug', 'transforms': [{'type': 'RandomFlip3D'}, {'std': [1, 1, 1], 'mean': [103.53, 116.28, 123.675], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'type': 'DefaultFormatBundle3D', 'with_label': False, 'class_names': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier']}, {'keys': ['img'], 'type': 'Collect3D'}], 'scale_factor': 1}], 'data_root': 'data/nuscenes/', 'test_mode': True, 'img_prefix': 'data/nuscenes/', 'box_type_3d': 'Camera'}, 'test': {'type': 'NuScenesMonoDataset', 'classes': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'], 'ann_file': 'data/nuscenes/nuscenes_infos_val_mono3d.coco.json', 'modality': {'use_map': False, 'use_lidar': False, 'use_radar': False, 'use_camera': True, 'use_external': False}, 'pipeline': [{'type': 'LoadImageFromFileMono3D'}, {'flip': False, 'type': 'MultiScaleFlipAug', 'transforms': [{'type': 'RandomFlip3D'}, {'std': [1, 1, 1], 'mean': [103.53, 116.28, 123.675], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'type': 'DefaultFormatBundle3D', 'with_label': False, 'class_names': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier']}, {'keys': ['img'], 'type': 'Collect3D'}], 'scale_factor': 1}], 'data_root': 'data/nuscenes/', 'test_mode': True, 'img_prefix': 'data/nuscenes/', 'box_type_3d': 'Camera'}, 'train': {'type': 'NuScenesMonoDataset', 'classes': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'], 'ann_file': 'data/nuscenes/nuscenes_infos_train_mono3d.coco.json', 'modality': {'use_map': False, 'use_lidar': False, 'use_radar': False, 'use_camera': True, 'use_external': False}, 'pipeline': [{'type': 'LoadImageFromFileMono3D'}, {'type': 'LoadAnnotations3D', 'with_bbox': True, 'with_label': True, 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': True, 'with_bbox_depth': True}, {'type': 'Resize', 'img_scale': [(1600, 900)], 'keep_ratio': True}, {'type': 'RandomFlip3D', 'flip_ratio_bev_horizontal': 0.5}, {'std': [1, 1, 1], 'mean': [103.53, 116.28, 123.675], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'type': 'DefaultFormatBundle3D', 'class_names': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier']}, {'keys': ['img', 'gt_bboxes', 'gt_labels', 'attr_labels', 'gt_bboxes_3d', 'gt_labels_3d', 'centers2d', 'depths'], 'type': 'Collect3D'}], 'data_root': 'data/nuscenes/', 'test_mode': False, 'img_prefix': 'data/nuscenes/', 'box_type_3d': 'Camera'}, 'samples_per_gpu': 4, 'workers_per_gpu': 2}
model = {'neck': {'type': 'FPN', 'num_outs': 5, 'in_channels': [256, 512, 1024, 2048], 'start_level': 1, 'out_channels': 256, 'add_extra_convs': 'on_output', 'relu_before_extra_convs': True}, 'type': 'FCOSMono3D', 'backbone': {'dcn': {'type': 'DCNv2', 'deform_groups': 1, 'fallback_on_stride': False}, 'type': 'ResNet', 'depth': 101, 'style': 'caffe', 'init_cfg': {'type': 'Pretrained', 'checkpoint': 'open-mmlab://detectron2/resnet101_caffe'}, 'norm_cfg': {'type': 'BN', 'requires_grad': False}, 'norm_eval': True, 'num_stages': 4, 'out_indices': [0, 1, 2, 3], 'frozen_stages': 1, 'stage_with_dcn': [False, False, True, True]}, 'test_cfg': {'nms_pre': 1000, 'nms_thr': 0.8, 'score_thr': 0.05, 'max_per_img': 200, 'min_bbox_size': 0, 'use_rotate_nms': True, 'nms_across_levels': False}, 'bbox_head': {'type': 'FCOSMono3DHead', 'strides': [8, 16, 32, 64, 128], 'loss_cls': {'type': 'FocalLoss', 'alpha': 0.25, 'gamma': 2, 'loss_weight': 1, 'use_sigmoid': True}, 'loss_dir': {'type': 'CrossEntropyLoss', 'loss_weight': 1, 'use_sigmoid': False}, 'conv_bias': True, 'loss_attr': {'type': 'CrossEntropyLoss', 'loss_weight': 1, 'use_sigmoid': False}, 'loss_bbox': {'beta': 0.1111111111111111, 'type': 'SmoothL1Loss', 'loss_weight': 1}, 'pred_velo': True, 'bbox_coder': {'type': 'FCOS3DBBoxCoder', 'code_size': 9}, 'cls_branch': [256], 'dir_branch': [256], 'dir_offset': 0.7854, 'pred_attrs': True, 'reg_branch': [[256], [256], [256], [256], []], 'attr_branch': [256], 'in_channels': 256, 'num_classes': 10, 'norm_on_bbox': True, 'feat_channels': 256, 'stacked_convs': 2, 'group_reg_dims': [2, 1, 3, 1, 2], 'center_sampling': True, 'diff_rad_by_sin': True, 'loss_centerness': {'type': 'CrossEntropyLoss', 'loss_weight': 1, 'use_sigmoid': True}, 'dcn_on_last_conv': True, 'dir_limit_offset': 0, 'centerness_on_reg': True, 'use_direction_classifier': True}, 'train_cfg': {'debug': False, 'pos_weight': -1, 'code_weight': [1, 1, 0.2, 1, 1, 1, 1, 0.05, 0.05], 'allowed_border': 0}}
runner = {'type': 'EpochBasedRunner', 'max_epochs': 12}
gpu_ids = [0, 1, 2]
work_dir = './work_dirs/fcos3d_r101_caffe_fpn_gn-head_dcn_2x8_1x_nus-mono3d'
workflow = [['train', 1], ['val', 1]]
data_root = 'data/nuscenes/'
load_from = None
log_level = 'INFO'
lr_config = {'step': [8, 11], 'policy': 'step', 'warmup': 'linear', 'warmup_iters': 500, 'warmup_ratio': 0.3333333333333333}
optimizer = {'lr': 0.002, 'type': 'SGD', 'momentum': 0.9, 'weight_decay': 0.0001, 'paramwise_cfg': {'bias_lr_mult': 2, 'bias_decay_mult': 0}}
evaluation = {'interval': 2}
log_config = {'hooks': [{'type': 'MMDetWandbHook', 'by_epoch': True, 'init_kwargs': {'tags': ['backbone:ResNet50', 'neck:FPN', 'head:FCOS3D', 'pretrained'], 'entity': 'nkoch-aitastic', 'project': 'van-detection3d'}, 'log_checkpoint': True, 'num_eval_images': 100, 'log_checkpoint_metadata': True}, {'type': 'TextLoggerHook', 'by_epoch': True}], 'interval': 10}
class_names = ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier']
dist_params = {'backend': 'nccl'}
resume_from = None
dataset_type = 'NuScenesMonoDataset'
img_norm_cfg = {'std': [1, 1, 1], 'mean': [103.53, 116.28, 123.675], 'to_rgb': False}
total_epochs = 12
eval_pipeline = [{'type': 'LoadImageFromFileMono3D'}, {'type': 'DefaultFormatBundle3D', 'with_label': False, 'class_names': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier']}, {'keys': ['img'], 'type': 'Collect3D'}]
test_pipeline = [{'type': 'LoadImageFromFileMono3D'}, {'flip': False, 'type': 'MultiScaleFlipAug', 'transforms': [{'type': 'RandomFlip3D'}, {'std': [1, 1, 1], 'mean': [103.53, 116.28, 123.675], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'type': 'DefaultFormatBundle3D', 'with_label': False, 'class_names': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier']}, {'keys': ['img'], 'type': 'Collect3D'}], 'scale_factor': 1}]
input_modality = {'use_map': False, 'use_lidar': False, 'use_radar': False, 'use_camera': True, 'use_external': False}
train_pipeline = [{'type': 'LoadImageFromFileMono3D'}, {'type': 'LoadAnnotations3D', 'with_bbox': True, 'with_label': True, 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': True, 'with_bbox_depth': True}, {'type': 'Resize', 'img_scale': [(1600, 900)], 'keep_ratio': True}, {'type': 'RandomFlip3D', 'flip_ratio_bev_horizontal': 0.5}, {'std': [1, 1, 1], 'mean': [103.53, 116.28, 123.675], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'type': 'DefaultFormatBundle3D', 'class_names': ['car', 'truck', 'trailer', 'bus', 'construction_vehicle', 'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier']}, {'keys': ['img', 'gt_bboxes', 'gt_labels', 'attr_labels', 'gt_bboxes_3d', 'gt_labels_3d', 'centers2d', 'depths'], 'type': 'Collect3D'}]
mp_start_method = 'fork'
optimizer_config = {'grad_clip': {'max_norm': 35, 'norm_type': 2}}
checkpoint_config = {'interval': 2, 'max_keep_ckpts': 3}
opencv_num_threads = 0
